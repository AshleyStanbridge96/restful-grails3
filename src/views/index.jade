!!! 5
//if IE 7
  html(lang="en", class="no-js ie", data-ng-app="main", id="ng-app")
//if IE 8
  html(lang="en", class="no-js ie", data-ng-app="main", id="ng-app")
//if IE 9
  html(lang="en", class="no-js ie9", data-ng-app="main", id="ng-app")
//if [(gt IE 9)|!(IE)] <!
html(class="no-js", ng-app="main")
  // <![endif]
  head
    meta(charset="utf-8")
    title Restful Web Services in Grails 3
    meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta(name="apple-mobile-web-app-status-bar-style", content="black-translucent")
    meta(name="description", content="Reveal JS Template")
    link(href="./assets/css/style.css", rel="stylesheet", type="text/css")

  body
    .reveal
      .opi-logo
      .slides
        section(data-state="index-slide")
          h2(style="color:white; margin-top:42%") Restful Web Services in Grails 3
          small(style="color:white;") by Jenn Strater <a href="http://twitter.com/jennstrater" target="_blank"><img style="border:none;margin-top:0px;box-shadow:none;" src="./assets/img/CompanyAndProductLogos/twitter.png"/>@jennstrater</a>
        section(data-state="github-slide", class="github-section")
          h1 <i class="fa fa-icon fa-github"></i>
          p
            a(href="http://jlstrater.github.io/Restful-Grails3") http://jlstrater.github.io/Restful-Grails3
          p
            a(href="http://github.com/jlstrater/restful-grails-3",target="_blank") Slides(source)
        section
          h2 About Me
          p Professional
          ul
            li Senior Consultant - <a href="http://objectpartners.com" target="_blank">Object Partners</a>
            li Full Stack Engineer
            li Co-Founder - <a href="http://www.gr8ladies.org" target="_blank">Gr8Ladies</a>
        section
          h2 About Me
          p Minneapolis, MN
          p <img style="border:none;margin-top:-25px;" src="./assets/img/minnesota.png"/>
          ul.ul-no-style Connect on Social Media
            li <a href="https://twitter.com/jennstrater" target="_blank">Twitter</a> @jennstrater
            li <a href="https://linkedin.com/in/jennstrater" target="_blank">LinkedIn</a> https://linkedin.com/in/jennstrater
            li <a href="https://github.com/jlstrater" target="_blank">Github</a> https://github.com/jlstrater

        section
          h2 Agenda
          ul
            li Remedial REST
            li Ways to make your APIs more RESTful
            ul
              li with Grails 3 Examples

        section
          h2 What this talk will NOT cover
          ul
            li Scalability of Grails APIs
            li Security
            li Ingesting RESTful APIs

        section
          h2 Remedial REST
        section
          h2 Definition
          blockquote.
            <b>RE</b>presentational <b>S</b>tate <b>T</b>ransfer (REST) is an architectural style that
            describes how distributed data objects, or resources, can be defined and addressed, stressing the easy exchange
            of information and scalability.<ital>(Fischer 2013.)</ital>
          aside.notes
            NOT a standard or specification
        section
          h2 Goals
          ul
            li To create a uniform interface between components
            li Decouple implementations from the underlying services

        section
          h1 Characteristics
        section
          h2 Uniform Interface
          ul
            li Individual Resources are identified using URIs
            li Resources are abstracted from the data source and can be manipulated before being sent to a client
            li Hypermedia is the engine for state transfer

        section
          h2 Stateless
          ul Self-contained and independent requests
            li Improves scalability
            li Allows for parallel processing of requests
            li Lets resources be viewed in isolation

        section
          h2 Client-Server
          ul Decoupled clients and servers
            li Increases portability
            li Easier to scale

        section
          h2 Layered System
          ul Terminus or an Intermediary endpoints
            li Allows for load balancing and intermediate security enforcers

        section
          h2 Hypermedia As The Engine Of Application State (HATEOAS)<sup>*</sup>
          p link to the resource and navigation
          pre.
            <code>{
              "_links": {
                "self": { "href": "/members" },
                "next": [
                  { "href": "/members?page=2" }
                ]
              }
            }</code>
        section
          h2 Questions about REST?

        section
          h2 Ways To Improve A RESTful API
          h3 (with Grails)

        section
          h2 Getting Started
          p Resource Transformation
          pre.
            <code>import grails.rest.Resource

            @Resource(uri='gr8ladies')
            class Gr8Lady {
              String first
              String last
            }</code>
        section
          h2 Getting Started
          p URL mappings
          pre.
            <code>URLmappings.groovy

            "/gr8ladies"(resources:"gr8lady")</code>
          p Or
          pre.
            <code>"/gr8ladies"(resources:"gr8lady") {
              "/chapter"(controller:"chapter", method:"GET")
            }</code>
          small --> /gr8ladies/{id}/chapter
        section
          h2 HTTP Status Codes
          ul
            li 200 is ok ... but not for everything
        section
          h2 HTTP Status Codes
          p Learn the correct status codes for different errors
          table(align="center")
            tr
              th Code
              th Description
            tr
              th 2XX
              th Successful
            tr
              td 200
              td OK
            tr
              th 4XX
              th Client Error
            tr
              td 400
              td Bad Request
            tr
              td 403
              td Forbidden
            tr
              td 404
              td Not Found
            tr
              th 5XX
              th Server Errors
            tr
              td 500
              td Internal Server Error
            tr
              td 502
              td Bad Gateway

          small
            span an exerpt from
            a(href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html", target="_blank") http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
        section
          h2 HTTP Status Codes in Grails
          p Many of the cases are handled by Grails or the server(i.e. 5XXs)
          pre.
            <code>if(someCondition) {
              render status: 4XX
            }</code>
          p or
          pre.
            <code>render status: NOT_FOUND</code>
        section
          h2 HTTP verbs
          ul
            li GET to retrieve a resource
            li POST to create a new resource
            li PUT to update an existing resource
            li DELETE to remove an existing resource
        section
          h2 HTTP verbs in Grails
          h3 Resource Annotation
          p.fragment Handled by Default! :)
        section
          h2 HTTP verbs in Grails
          p On each Controller
          pre.
            <code>class Gr8LadyController {
              static allowedMethods = [list: "GET", save: "POST", update: "PUT"]
            }</code>
        section
          h2 HTTP verbs in Grails
          p URL Mappings
          pre.
            <code>"/gr8ladies"(resource: "gr8lady", method: "GET")</code>
        section
          h2 Endpoints
          h3 List
          p <code>http://example.com/resource</code>
          h3 Show
          p <code>http://example.com/resource/{id}</code>
        section
          h2 Endpoints
          ul
            li <code>http://example.com/resource/{id}</code>
            li.fragment NOT <code>http://example.com/resource?id=abc123</code>
            li.fragment NOT <code>http://example.com/resource/{id}/?action=delete</code>
            li.fragment NOT <code>http://example.com/resource/add</code>
        section
          h2 Multiple Media Types (JSON, XML, etc)

        section
          h2 Consistent Styling
          ul
            li casing
            ul
              li
                pre <code>http://example.com/resources</code>
              li NOT
                pre <code>http://example.com/ReSoUrCeS</code>
              li Either:
                pre <code>http://example.com/multiWordResources</code>
              li Or:
                pre <code>http://example.com/multi-word-resources</code>
              li Don't Mix and Match
            li resource names (plural preferred)
        section
          h2 Pagination
          pre.
            <code>http://example.com/resource?offset=0&limit=10</code>
        section
          h2 Marshalled responses
        section
          h2 HATEOAS
        section
          h2 Versioning<sup>*</sup>
          ul
            li <b>URI</b> <code>http://example.com/v1/resource/id</code>
            li <b>Custom Header</b>
            li
              pre.
                <code class="http">GET https&#58;&#47;&#47;example.com/resource
                version&#58; 2.0</code>
            li <b>Content Type</b>
            li
              pre.
                <code class="http">GET https&#58;&#47;&#47;example.com/resource
                Accept&#58; application/vnd.example.v2+json</code>
          aside.notes.
            If you really can't use hypermedia, please at least version your API. There are several ways to do this, each
            with their own pros and cons.  The easiest to implement is to add /v1/ to the URI.  However, this breaks theory
            since the URI is no longer just about the resource data.  Be careful if you choose this route as it can cause
            confusion when some resources are at various version numbers (ie http://example.com/v2/parentResource/v1/childResource).
            Another option is to add the version number to the headers. This maintains the purity of the URI, but makes it
            harder for consumers of the API. You can't just have a one button/link for the GET request.  The last option
            is to specify the version number in the accept header.

        section
          h2 Versioning in Grails
          ul
            ul URI
              li <code>"/gr8ladies/v1"</code>
              li <code>"/gr8ladies/v2"</code>
            ul Accept Header
              li <code>"/gr8ladies(version:'1.0', resources:"gr8lady", namespace: 'v1')</code>
              li <code>"/gr8ladies(version:'2.0', resources:"gr8lady", namespace: 'v2')</code>

        section
          h2 Conclusions
          ul
            li REST is an architecture style, not a standard
            li There are many ways to implement REST
            li Grails makes REST easy with <code>@Resource</code> and more!

        section
          h3 Questions?
          <img src='./assets/img/halofunnyface.jpg' style="border:none;margin:0px;">
          <img src='./assets/img/pumpkinloaf.jpg' style="border:none;">
          <img src='./assets/img/upsidedownpumpkin.jpg' style="border:none;">
          <img src='./assets/img/halopanic.jpg' style="border:none;margin:0px;">

        section
          h2 References
          ul.ul-no-style
            li Kay, Russell. <a href="http://www.computerworld.com/article/2552929/networking/representational-state-transfer--rest-.html">"Representational State Transfer (REST)"</a>. <ital>Computerworld</ital>. 6 Aug 2007. Web
            li Fischer, Ludovico. <a href="http://code.tutsplus.com/tutorials/a-beginners-guide-to-http-and-rest--net-16340">"A Beginner’s Guide to HTTP and REST"</a>. <ital>Tuts+</ital>. 9 Jan 2013. Web
            li Fielding, Roy. <ital><a href="https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm">Architectural Styles and the Design of Network-based Software Architectures<ital></a>. 2000.

    script(src="./assets/js/app.js")

    // If the query includes 'print-pdf', use the PDF print sheet
    script(type='text/javascript').
      if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = './assets/css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
      } else if ( window.location.search.match( /print-paper/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = './assets/css/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
      }

